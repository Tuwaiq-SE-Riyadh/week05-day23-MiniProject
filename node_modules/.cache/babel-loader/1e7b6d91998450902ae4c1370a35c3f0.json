{"ast":null,"code":"var _jsxFileName = \"/Users/norah/Desktop/my-app7/src/components/Videos .js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setVideos } from \"../reducers/user/actions\";\nimport ListVideos from './ListVideos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Videos() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => {\n    console.log(state);\n    return {\n      videos: state.videosReducer.videos\n    };\n  });\n  useEffect(() => {\n    axios.get('https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=20&chart=mostPopular&key=AIzaSyBs8YDqDg5CX_C7sisUFYR6xJ5O_vpsBZg').then(response => {\n      console.log(response.data.items); // console.log(response.data.items[0].snippet.title);\n\n      const action = setVideos(response.data.items);\n      dispatch(action);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.videos.map((element, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListVideos, {\n          Videos: element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Videos, \"S+pMfyAoJZ7H2DEEeEiK+kYYpZs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Videos;\nexport default Videos;\n{\n  /* <ListVideos Videos={element} key={element.id} />*/\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/Users/norah/Desktop/my-app7/src/components/Videos .js"],"names":["useEffect","axios","useDispatch","useSelector","setVideos","ListVideos","Videos","dispatch","state","console","log","videos","videosReducer","get","then","response","data","items","action","catch","err","map","element","index"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACb,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,KAAK,GAAGL,WAAW,CAAEK,KAAD,IAAW;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AACLG,MAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD;AADvB,KAAP;AAGD,GALwB,CAAzB;AAMAX,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACFY,GADH,CACO,uIADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAQ,CAACC,IAAT,CAAcC,KAA1B,EADkB,CAElB;;AACA,YAAMC,MAAM,GAAGd,SAAS,CAACW,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAxB;AACAV,MAAAA,QAAQ,CAACW,MAAD,CAAR;AACD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACD,KAVH;AAWD,GAZM,EAYJ,EAZI,CAAT;AAcA,sBACI;AAAA,cACCZ,KAAK,CAACG,MAAN,CAAaU,GAAb,CAAiB,CAACC,OAAD,EAASC,KAAT,KAAmB;AACrC,0BACI;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,MAAM,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADF,SAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAUD,KAXE;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAvCQjB,M;UACYJ,W,EAEHC,W;;;KAHTG,M;AAwCT,eAAeA,MAAf;AACA;AAAC;AAAsD","sourcesContent":["import { useEffect } from \"react\";\nimport axios from \"axios\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setVideos } from \"../reducers/user/actions\";\nimport ListVideos from './ListVideos'\n\nfunction Videos(){\n    const dispatch = useDispatch();\n\n    const state = useSelector((state) => {\n      console.log(state);\n      return {\n        videos: state.videosReducer.videos,\n      };\n    });\n    useEffect(() => {\n        axios\n          .get('https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=20&chart=mostPopular&key=AIzaSyBs8YDqDg5CX_C7sisUFYR6xJ5O_vpsBZg')\n          .then((response) => {       \n            console.log(response.data.items);\n            // console.log(response.data.items[0].snippet.title);\n            const action = setVideos(response.data.items);\n            dispatch(action);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }, []); \n\n    return(\n        <div>\n        {state.videos.map((element,index) => {\n        return (\n            <div key={index} >\n              <ListVideos Videos={element} />  \n           {/* <ListVideos videoId={element.id.videoId} title={element.snippet.title} describe={element.snippet.describe} key={element.id} /> */}\n\n                {/* <p>{element.id.videoId} </p>\n                <p>{element.snippet.title} </p>\n                <p>{element.snippet.describe} </p> */}\n            </div>\n        ) \n      })}\n        </div>\n    )\n}\nexport default Videos;\n{/* <ListVideos Videos={element} key={element.id} />*/}"]},"metadata":{},"sourceType":"module"}